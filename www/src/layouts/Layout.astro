---
interface Props {
	title?: string;
	description?: string;
}

const { 
	title = "Luma — Reclaim Your Attention | One World, One Inbox, No Distractions",
	description = "The open-source platform that unites all your conversations and highlights what matters — without the scroll."
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<title>{title}</title>
		
		<!-- Google Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Crimson+Pro:wght@400;600;700&family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
	</head>
	<body>
		<slot />
	</body>
</html>

<style is:global>
	:root {
		/* Enhanced Colors for Better Contrast */
		--color-bg: #FFFFFF;
		--color-text: #0F0F0F;
		--color-text-muted: #525252;
		--color-text-light: #888888;
		--color-accent: #FF6B58;
		--color-accent-hover: #FF5544;
		--color-accent-pale: #FFF5F4;
		--color-border: #DFDFDF;
		--color-border-light: #EBEBEB;
		--color-glass: rgba(255, 255, 255, 0.85);
		--color-surface: #FAFAFA;
		--color-surface-alt: #F5F5F5;
		
		/* Enhanced Gradients */
		--gradient-primary: linear-gradient(135deg, #FF6B58 0%, #FF8E7F 100%);
		--gradient-subtle: linear-gradient(180deg, #F8F8F8 0%, #FFFFFF 100%);
		--gradient-accent: linear-gradient(135deg, #FFF5F4 0%, #FFF9F8 100%);
		--gradient-overlay: linear-gradient(180deg, rgba(255, 255, 255, 0.95) 0%, rgba(255, 255, 255, 0.85) 100%);
		
		/* Typography */
		--font-serif: 'Crimson Pro', serif;
		--font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
		
		/* Spacing */
		--spacing-xs: 0.5rem;
		--spacing-sm: 1rem;
		--spacing-md: 2rem;
		--spacing-lg: 3rem;
		--spacing-xl: 5rem;
		--spacing-2xl: 8rem;
		--spacing-3xl: 12rem;
		
		/* Layout */
		--max-width: 1280px;
		--max-width-narrow: 920px;
		
		/* Enhanced Shadows for Better Depth */
		--shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.05), 0 1px 2px rgba(0, 0, 0, 0.03);
		--shadow-md: 0 4px 12px rgba(0, 0, 0, 0.08), 0 2px 6px rgba(0, 0, 0, 0.04);
		--shadow-lg: 0 12px 32px rgba(0, 0, 0, 0.12), 0 4px 12px rgba(0, 0, 0, 0.06);
		--shadow-xl: 0 20px 60px rgba(0, 0, 0, 0.15), 0 8px 24px rgba(0, 0, 0, 0.08);
		--shadow-2xl: 0 32px 80px rgba(0, 0, 0, 0.2), 0 12px 32px rgba(0, 0, 0, 0.1);
		
		/* Border Radius */
		--radius-sm: 8px;
		--radius-md: 12px;
		--radius-lg: 20px;
		--radius-xl: 32px;
		--radius-full: 9999px;
		
		/* Transitions */
		--transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
		--transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);
		--transition-slow: 400ms cubic-bezier(0.4, 0, 0.2, 1);
	}
	
	* {
		box-sizing: border-box;
	}
	
	html {
		scroll-behavior: smooth;
	}
	
	html,
	body {
		margin: 0;
		padding: 0;
		width: 100%;
		min-height: 100vh;
		background: var(--color-bg);
		color: var(--color-text);
		font-family: var(--font-sans);
		font-size: 16px;
		line-height: 1.7;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		text-rendering: optimizeLegibility;
	}
	
	h1, h2, h3, h4, h5, h6 {
		font-family: var(--font-serif);
		font-weight: 700;
		line-height: 1.15;
		margin: 0;
		letter-spacing: -0.02em;
		color: var(--color-text);
	}
	
	h1 {
		font-weight: 800;
		letter-spacing: -0.04em;
	}
	
	p {
		margin: 0;
		color: var(--color-text-muted);
	}
	
	strong {
		font-weight: 600;
		color: var(--color-text);
	}
	
	a {
		color: inherit;
		text-decoration: none;
	}
	
	button {
		cursor: pointer;
		border: none;
		font-family: inherit;
	}
	
	/* Fade in animation for scroll reveals */
	@keyframes fadeInUp {
		from {
			opacity: 0;
			transform: translateY(30px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}
	
	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}
	
	.fade-in {
		animation: fadeIn 1s ease-out forwards;
	}
	
	.fade-in-up {
		animation: fadeInUp 1s ease-out forwards;
	}
</style>
